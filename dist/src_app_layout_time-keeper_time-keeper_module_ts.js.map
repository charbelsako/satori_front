{"version":3,"file":"src_app_layout_time-keeper_time-keeper_module_ts.js","mappings":"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","sources":["./src/app/layout/time-keeper/components/time-keeper/time-keeper.component.ts","./src/app/layout/time-keeper/directives/index.ts","./src/app/layout/time-keeper/directives/sortable.directive.ts","./src/app/layout/time-keeper/service/time-keeper.service.ts","./src/app/layout/time-keeper/time-keeper-routing.module.ts","./src/app/layout/time-keeper/time-keeper.module.ts","./src/app/shared/directives/index.ts","./src/app/shared/directives/sortable.directive.ts","./src/app/shared/modules/download-file/download-file.ts","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbdSortableHeader, SortDirection, SortEvent } from '@app/shared/directives';\nimport { routerTransition } from '@app/router.animations';\nimport { downloadFile } from '@app/shared/modules/download-file/download-file';\nimport { ConfirmationDialogService } from '@app/shared/services/confirmation-dialog/confirmation-dialog.service';\nimport { debounceTime, distinctUntilChanged, Subject } from 'rxjs';\nimport { TimeKeeperService } from '../../service/time-keeper.service';\n\ninterface State {\n  page: number;\n  limit: number;\n  totalPages: number;\n  totalResults: number;\n  searchTerm: string;\n  sortColumn: string;\n  sortDirection: SortDirection;\n}\n@Component({\n  selector: 'app-time-keeper',\n  templateUrl: './time-keeper.component.html',\n  styleUrls: ['./time-keeper.component.scss'],\n  animations: [routerTransition()]\n})\nexport class TimeKeeperComponent implements OnInit {\n  timeKeepers: any[] = [];\n  sortedColumn!: string;\n  sortedDirection!: string;\n  public searchTerm: string = '';\n  searchTermUpdate = new Subject<string>();\n  isLoading: boolean = false;\n  isTimeKeepers: boolean = true;\n\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\n  public _state: State = {\n    page: 1,\n    limit: 20,\n    totalPages: 1,\n    totalResults: 0,\n    searchTerm: '',\n    sortColumn: 'createdAt',\n    sortDirection: 'desc',\n  };\n  constructor(\n    public router: Router,\n    public timeKeeperService: TimeKeeperService,\n    private cdr: ChangeDetectorRef,\n    private confirmationDialogService: ConfirmationDialogService\n  ) {\n    this.searchTermUpdate\n      .pipe(debounceTime(200), distinctUntilChanged())\n      .subscribe(value => {\n        this._state.searchTerm = value;\n        this.getAllTimeKeepers(this._state);\n      });\n  }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.getAllTimeKeepers(this._state);\n  }\n\n  onSort({ column, direction }: SortEvent) {\n    this.sortedColumn = column;\n    this.sortedDirection = direction;\n    this._state.sortColumn = column;\n    this._state.sortDirection = direction;\n    this.getAllTimeKeepers(this._state);\n  }\n  downloadFileExcel() {\n    return this.timeKeeperService.getTimeKeeperForExcelDownload(this._state).subscribe(\n      response => {\n        downloadFile(response, \"time-keeper\")\n      }, (error) => {\n      }\n    );\n  }\n  getAllTimeKeepers(state: State) {\n    this.timeKeeperService.getTimeKeepers(state).subscribe(\n      response => {\n        this.timeKeepers = response.results;\n        if (this.timeKeepers.length == 0) {\n          this.isTimeKeepers = false;\n        } else {\n          this.isTimeKeepers = true;\n        }\n        this.setState(response);\n        this.isLoading = false;\n      }, (error) => {\n        this.isLoading = false;\n      }\n    );\n  }\n  \n  refreshTimeKeepers() {\n    this.getAllTimeKeepers(this._state);\n  }\n\n  setState(response: any) {\n    this._state.page = response.page;\n    this._state.limit = response.limit;\n    this._state.totalPages = response.totalPages;\n    this._state.totalResults = response.totalResults;\n  }\n\n  editTimeKeeper(timeKeeperId: string) {\n    this.router.navigate(['/timeKeepers/edit-timeKeeper/' + timeKeeperId]);\n  }\n\n  updateStatus(timeKeeperId: string, status: boolean) {\n    let data = {\n      isActive: !status\n    }\n    this.timeKeeperService.updateTimeKeeper(timeKeeperId, data).subscribe(response => {\n      if (response) {\n        // this.toastr.success(response.name + ' Updated!', 'Success');\n        this.refreshTimeKeepers();\n      }\n    });\n  }\n\n  updateFavorite(timeKeeperId: string, status: boolean) {\n    let data = {\n      isFavorite: !status\n    }\n    this.timeKeeperService.updateTimeKeeper(timeKeeperId, data).subscribe(response => {\n      if (response) {\n        // this.toastr.success(response.name + ' Updated!', 'Success');\n        this.refreshTimeKeepers();\n      }\n    });\n  }\n\n  deleteTimeKeeper(timeKeeperId: string) {\n    this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete this timeKeeper ?')\n      .then((confirmed) => {\n        if (confirmed) {\n          this.timeKeeperService.deleteTimeKeeper(timeKeeperId).subscribe(response => {\n            this.getAllTimeKeepers(this._state);\n          });\n        }\n      })\n  }\n}\n","import { NgbdSortableHeader } from './sortable.directive';\n\nexport const directives = [NgbdSortableHeader];\n\nexport * from './sortable.directive';\n","import { Directive, EventEmitter, HostBinding, HostListener, Input, OnChanges, Output } from '@angular/core';\nexport type SortColumn = 'createdAt' | '';\nexport type SortDirection = 'asc' | 'desc' | '';\nconst rotate: { [key: string]: SortDirection } = { asc: 'desc', desc: 'asc', '': 'asc' };\n\nexport interface SortEvent {\n    column: string;\n    direction: SortDirection;\n}\n\n@Directive({\n    selector: 'th[sortable]',\n    exportAs: 'NgbdSortableHeader',\n    host: {\n        '[class.asc]': 'direction === \"asc\"',\n        '[class.desc]': 'direction === \"desc\"',\n        '(click)': 'rotate()'\n    }\n})\nexport class NgbdSortableHeader implements OnChanges {\n    @Input() sortable!: string;\n    @Input() oldColumn!: string;\n    @Input() direction: SortDirection = '';\n    @Output() sort = new EventEmitter<SortEvent>();\n    ngOnChanges(changes: any) {\n        if (this.sortable !== changes?.oldColumn?.currentValue && changes?.oldColumn?.currentValue !== changes?.oldColumn?.previousValue) {\n            this.direction = ''\n        }\n    }\n    rotate() {\n        this.direction = rotate[this.direction];\n        this.sort.emit({ column: this.sortable, direction: this.direction });\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ApiService } from '@app/shared/services/api/api.service';\nimport { environment } from 'environments/environment';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeKeeperService {\n  public url: string = environment.backendUrl;\n  constructor(private http: HttpClient, private apiService: ApiService) { }\n\n  getTimeKeepers(data: any): Observable<any> {\n    if (data.searchTerm == '') {\n      return this.apiService.get(`/timekeepers?sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}`);\n    } else {\n      return this.apiService.get(`/timekeepers?sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}&search=${data.searchTerm}`);\n    }\n  }\n  getTimeKeeperForExcelDownload(data: any): Observable<any> {\n    if (data.searchTerm == '') {\n      return this.apiService.getBlob(`/timekeepers/download?sortBy=${data.sortColumn + ':' + data.sortDirection}`);\n    } else {\n      return this.apiService.getBlob(`/timekeepers/download?sortBy=${data.sortColumn + ':' + data.sortDirection}&search=${data.searchTerm}`);\n    }\n  }\n  getDeletedTimeKeepers(data: any): Observable<any> {\n    if (data.searchTerm == '') {\n      return this.apiService.get(`/timekeepers?isDelete=true&sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}`);\n    } else {\n      return this.apiService.get(`/timekeepers?isDelete=true&sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}&search=${data.searchTerm}`);\n    }\n  }\n\n  getTimeKeeperCSV(): Observable<any> {\n    return this.apiService.get(`/timekeepers/bulk/csv/data`);\n  }\n\n  getTimeKeeperById(data: any): Observable<any> {\n    return this.apiService.get(`/timekeepers/${data}`);\n  }\n\n  addNewTimeKeeper(data: any): Observable<any> {\n    return this.apiService.post(`/timekeepers`, data);\n\n  }\n\n  updateTimeKeeper(clientId: any, data: any): Observable<any> {\n    return this.apiService.patch(`/timekeepers/${clientId}`, data);\n  }\n\n  deleteTimeKeeper(data: String): Observable<any> {\n    return this.apiService.delete(`/timekeepers/` + data);\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TimeKeeperComponent } from './components/time-keeper/time-keeper.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TimeKeeperComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TimeKeeperRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { AsyncPipe, CommonModule, DecimalPipe, NgFor, NgIf } from '@angular/common';\n\nimport { TimeKeeperRoutingModule } from './time-keeper-routing.module';\nimport { TimeKeeperComponent } from './components/time-keeper/time-keeper.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbTypeaheadModule, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PageHeaderModule } from '@app/shared';\nimport { TimeKeeperService } from './service/time-keeper.service';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { NgbdSortableHeader } from './directives';\n\n\n@NgModule({\n  declarations: [\n    TimeKeeperComponent,\n    NgbdSortableHeader\n  ],\n  imports: [\n    CommonModule,\n    TimeKeeperRoutingModule,\n    ReactiveFormsModule, \n    PageHeaderModule,\n    NgFor,\n\t\tDecimalPipe,\n\t\tFormsModule,\n\t\tAsyncPipe,\n\t\tNgbTypeaheadModule,\n\t\tNgbPaginationModule,\n\t\tNgIf,\n    NgxMaskModule.forRoot(),\n  ],\n  providers: [NgbdSortableHeader, TimeKeeperService]\n})\nexport class TimeKeeperModule { }\n","import { NgbdSortableHeader } from './sortable.directive';\n\nexport const directives = [NgbdSortableHeader];\n\nexport * from './sortable.directive';\n","import { Directive, EventEmitter, HostBinding, HostListener, Input, OnChanges, Output } from '@angular/core';\nexport type SortColumn = 'createdAt' | '';\nexport type SortDirection = 'asc' | 'desc' | '';\nconst rotate: { [key: string]: SortDirection } = { asc: 'desc', desc: 'asc', '': 'asc' };\n\nexport interface SortEvent {\n    column: string;\n    direction: SortDirection;\n}\n\n@Directive({\n    selector: 'th[sortable]',\n    exportAs: 'NgbdSortableHeader',\n    host: {\n        '[class.asc]': 'direction === \"asc\"',\n        '[class.desc]': 'direction === \"desc\"',\n        '(click)': 'rotate()'\n    }\n})\nexport class NgbdSortableHeader implements OnChanges {\n    @Input() sortable!: string;\n    @Input() oldColumn!: string;\n    @Input() direction: SortDirection = '';\n    @Output() sort = new EventEmitter<SortEvent>();\n    ngOnChanges(changes: any) {\n        if (this.sortable !== changes?.oldColumn?.currentValue && changes?.oldColumn?.currentValue !== changes?.oldColumn?.previousValue) {\n            this.direction = ''\n        }\n    }\n    rotate() {\n        this.direction = rotate[this.direction];\n        this.sort.emit({ column: this.sortable, direction: this.direction });\n    }\n}\n","\nconst downloadFile = (data: any, filename=\"records\") => {\n    const blob = new Blob([data], { type: 'application/octet-stream' });\n    const url = window.URL.createObjectURL(blob);\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = url;\n    downloadLink.download = `${filename}.xlsx`;\n\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n}\nexport {\n    downloadFile\n};\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n"],"names":["asyncScheduler","operate","createOperatorSubscriber","debounceTime","dueTime","scheduler","source","subscriber","activeTask","lastValue","lastTime","emit","unsubscribe","value","next","emitWhenIdle","targetTime","now","schedule","undefined","add","subscribe","complete"],"sourceRoot":"webpack:///","x_google_ignoreList":[9]}