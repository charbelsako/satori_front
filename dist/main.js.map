{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/shared/guard/auth.guard.ts","./src/app/shared/guard/index.ts","./src/app/shared/interceptors/error-interceptor.ts","./src/app/shared/interceptors/http.token.interceptor.ts","./src/app/shared/interceptors/index.ts","./src/app/shared/modules/language-translation/language-translation.module.ts","./src/app/shared/services/api/api.service.ts","./src/app/shared/services/auth/auth.service.ts","./src/app/shared/services/confirmation-dialog/confirmation-dialog.component.ts","./src/app/shared/services/confirmation-dialog/confirmation-dialog.service.ts","./src/app/shared/services/jwt/jwt.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './shared/guard';\n\nconst routes: Routes = [\n    {\n        path: 'auth',\n        loadChildren: () => import('./auth/auth.module').then((m) => m.AuthModule),\n    },\n    {\n        path: '',\n        loadChildren: () => import('./layout/layout.module').then((m) => m.LayoutModule),\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'error',\n        loadChildren: () => import('./server-error/server-error.module').then((m) => m.ServerErrorModule)\n    },\n    {\n        path: 'access-denied',\n        loadChildren: () => import('./access-denied/access-denied.module').then((m) => m.AccessDeniedModule)\n    },\n    { path: 'not-found', loadChildren: () => import('./not-found/not-found.module').then((m) => m.NotFoundModule) },\n    // { path: '**', redirectTo: 'not-found' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthGuard } from './shared/guard';\nimport { environment } from 'environments/environment';\nimport { HttpTokenInterceptor, ErrorInterceptor } from './shared/interceptors';\nimport { LanguageTranslationModule } from './shared/modules/language-translation/language-translation.module';\nimport { ApiService } from './shared/services/api/api.service';\nimport { AuthService } from './shared/services/auth/auth.service';\nimport { ConfirmationDialogService } from './shared/services/confirmation-dialog/confirmation-dialog.service';\nimport { JwtService } from './shared/services/jwt/jwt.service';\nimport { ConfirmationDialogComponent } from './shared/services/confirmation-dialog/confirmation-dialog.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgbdSortableHeader } from './shared/directives';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        LanguageTranslationModule,\n        AppRoutingModule,\n        ToastrModule.forRoot({\n            maxOpened: 1,\n            progressBar: true,\n            preventDuplicates: true,\n            closeButton: true,\n            tapToDismiss: true,\n            timeOut: 4000,\n            positionClass: 'toast-top-right',\n        }),         \n    ],\n    declarations: [AppComponent, ConfirmationDialogComponent],\n    providers: [\n        AuthGuard,\n        AuthService, \n        JwtService,\n        { provide: HTTP_INTERCEPTORS, \n            useClass: HttpTokenInterceptor, \n            multi: true \n        }, \n        ErrorInterceptor,\n        ApiService, \n        ConfirmationDialogService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport {Location} from '@angular/common';\nimport { AuthService } from '../services/auth/auth.service';\nimport { JwtService } from '../services/jwt/jwt.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor( \n        private authService: AuthService,\n        private location: Location,\n        private jwtService: JwtService,\n        private router: Router\n        ) {}\n\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        let url: string = state.url;\n        if (localStorage.getItem('access_token')) {\n            let user = this.jwtService.getUser();\n            if(user.isSuperAdmin == true || url.includes('dashboard') || url.includes('matter')){ // \n                return of(true);\n            }\n            if(this.verifyRole(url)){\n                return of(true);\n            }else{\n                this.location.back();\n                return of(false);\n            }\n        } else {\n            this.jwtService.logoutUser();\n            this.router.navigate(['auth/login'],{ queryParams: { return_url: window.location.pathname} });\n            return of(false);\n        }\n    }\n\n    verifyRole(url){\n        console.log(\"verify-role\");\n        const permissions = this.jwtService.getUserPermissions();\n        for (let index in permissions) {\n            if(url.includes(index) && permissions[index] == true)\n             return true;\n        }\n    }\n}\n","export * from './auth.guard';\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private router: Router) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(\n            catchError(err => {\n                if (err.status === 401) {\n                    localStorage.removeItem('access_token');\n                    setTimeout(() => {\n                        this.router.navigate(['']);\n                    }, 2000);\n                }\n                const error = { message: err.error.message || err.statusText, code: err.status };\n                return throwError(error);\n            })\n        );\n    }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth/auth.service';\nimport { JwtService } from '../services/jwt/jwt.service';\n\n@Injectable()\nexport class HttpTokenInterceptor implements HttpInterceptor {\n    constructor(\n        private jwtService: JwtService,\n        private authService: AuthService,\n        ) {}\n    authHeader: any;\n    async setUser() {\n        \n        this.authHeader = this.jwtService.getToken();\n    }\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        this.setUser();\n        if (this.authHeader === null) {\n            return next.handle(req.clone());\n        }\n        const clonedReq = req.clone({\n            headers: req.headers.set('Authorization', `bearer ${this.authHeader}`),\n        });\n        return next.handle(clonedReq);\n    }\n}\n","import { ErrorInterceptor } from './error-interceptor';\nimport { HttpTokenInterceptor } from './http.token.interceptor';\n\nexport const interceptors = [HttpTokenInterceptor, ErrorInterceptor];\n\nexport * from './http.token.interceptor';\nexport * from './error-interceptor';\n","/**\n * This module is used to language translations.\n * The translations are saved in a json file in /src/app/assets/i18n directory\n * Docs: https://www.codeandweb.com/babeledit/tutorials/how-to-translate-your-angular7-app-with-ngx-translate\n */\nimport { HttpClient } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n// import ngx-translate and the http loader\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n// ngx-translate - required for AOT compilation\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n    declarations: [],\n    imports: [\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        })\n    ],\n    exports: [TranslateModule]\n})\nexport class LanguageTranslationModule {\n    constructor(private translate: TranslateService) {\n        // Gets Default language from browser if available, otherwise set English ad default\n        this.translate.addLangs(['en', 'fr', 'ur', 'es', 'it', 'fa', 'de', 'zh-CHS']);\n        this.translate.setDefaultLang('en');\n        const browserLang = this.translate.getBrowserLang();\n        this.translate.use(browserLang.match(/en|fr|ur|es|it|fa|de|zh-CHS/) ? browserLang : 'en');\n    }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n// import { ToastrService } from 'ngx-toastr';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'environments/environment';\nimport { JwtService } from '../jwt/jwt.service';\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApiService {\n    constructor(\n        private http: HttpClient,\n        private jwtService: JwtService,\n        // private toastr: ToastrService,\n        private router: Router\n    ) { }\n\n    sendError(err: string) {\n        // this.toastr.error(err, 'Error !');\n    }\n\n    formatErrors(error: any) {\n        let errorText = '';\n        if (error.error && error.error.message) {\n            errorText = error.error.message;\n        } else if (error.statusText === 'Unknown Error' || error.statusText === 'Not Found') {\n            errorText = 'Something went wrong try again';\n        }\n        if (error.status === 401) {\n            this.jwtService.logoutUser();\n            this.router.navigate(['auth/login'], { queryParams: { return_url: window.location.pathname } });\n        }\n        this.sendError(errorText);\n        return throwError(error.error);\n    }\n    private setHeaders(headers: any = {}): HttpHeaders {\n        return new HttpHeaders(headers);\n    }\n\n    get(path: string, headers: object = {}): Observable<any> {\n        // this.checkToken();\n        return this.http\n            .get(`${environment.backendUrl}${path}`, { headers: this.setHeaders(headers) })\n            .pipe(catchError(err => this.formatErrors(err)));\n    }\n    \n    put(path: string, body: object = {}, headers: object = {}): Observable<any> {\n        // this.checkToken();\n        return this.http\n            .put(`${environment.backendUrl}${path}`, body, { headers: this.setHeaders(headers) })\n            .pipe(catchError(err => this.formatErrors(err)));\n    }\n\n    post(path: string, body: object = {}): Observable<any> {\n        // this.checkToken();\n        return this.http\n            .post(`${environment.backendUrl}${path}`, body)\n            .pipe(catchError(err => this.formatErrors(err)));\n    }\n    getBlob(path: string, headers: object = {}): Observable<any> {\n        // this.checkToken();\n        return this.http\n            .get(`${environment.backendUrl}${path}`, { headers: this.setHeaders(headers), responseType: 'blob' })\n            .pipe(catchError(err => this.formatErrors(err)));\n    }\n    postBlob(path: string, body: object = {}): Observable<any> {\n        // this.checkToken();\n        return this.http\n            .post(`${environment.backendUrl}${path}`, body, { responseType: 'blob' })\n            .pipe(catchError(err => this.formatErrors(err)));\n    }\n\n\n    patch(path: string, body: object = {}): Observable<any> {\n        // this.checkToken();\n        return this.http\n            .patch(`${environment.backendUrl}${path}`, body)\n            .pipe(catchError(err => this.formatErrors(err)));\n    }\n\n    delete(path: string): Observable<any> {\n        // this.checkToken();\n        return this.http\n            .delete(`${environment.backendUrl}${path}`)\n            .pipe(catchError(err => this.formatErrors(err)));\n    }\n\n    checkToken() {\n\n        let tokenExpiryTime = atob(localStorage.getItem('access_token_expiry') || '');\n        let refreshToken = atob(localStorage.getItem('refresh_token') || '');\n        let currentTime = new Date().toISOString();\n        if (refreshToken != '' && tokenExpiryTime != '' && tokenExpiryTime < currentTime) {\n\n            let data = {\n                'refreshToken': refreshToken,\n                'type': 'admin'\n            }\n            this.refreshToken('/auth/refresh-tokens', data).subscribe(response => {\n                this.jwtService.saveTokens(response);\n            }, (error) => {\n                // this.jwtService.logoutUser();\n                // this.router.navigate(['/auth/login']);     \n            });\n\n        }\n\n    }\n\n    refreshToken(path: string, body: object = {}): Observable<any> {\n        return this.http\n            .post(`${environment.backendUrl}${path}`, body)\n            .pipe(catchError(err => this.formatErrors(err)));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { ApiService } from '../api/api.service';\n@Injectable()\nexport class AuthService {\n    public url: string = environment.backendUrl;\n    public loggedIn = new ReplaySubject<boolean>();\n    public userData = new ReplaySubject<any>();\n    constructor(private apiService: ApiService) {}\n\n    login(data: any): Observable<any> {\n        return this.apiService.post('/auth/login', data);\n    }\n    \n    forgotPassword(data: any): Observable<any> {\n        return this.apiService.post('/auth/forgot-password', data);\n    }\n\n    resetPassword(data: any): Observable<any> {\n        return this.apiService.post('/auth/reset-password', data);\n    }\n\n    refreshToken(data: any): Observable<any> {\n        return this.apiService.post('/auth/refresh-tokens', data);\n    }\n    \n    /**\n     * Getter method for getting Logged In status\n     */\n    getLoggedInStatus() {\n        return this.loggedIn.asObservable();\n    }\n\n    /**\n     * Setter method to set Logged In status\n     */\n    setLoggedInStatus(value: boolean) {\n        this.loggedIn.next(value);\n    }\n\n    /**\n     * Getter method for getting Logged In status\n     */\n    getUserData(): Observable<any> {\n        return this.userData.asObservable();\n    }\n\n    /**\n     * Setter method to set Logged In status\n     */\n    setUserData(value: any) {\n        this.userData.next(value);\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'sb-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.scss']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  @Input() title!: string;\n  @Input() message!: string;\n  @Input() btnOkText!: string;\n  @Input() btnCancelText!: string;\n\n  constructor(private activeModal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  public decline() {\n    this.activeModal.close(false);\n  }\n\n  public accept() {\n    this.activeModal.close(true);\n  }\n\n  public dismiss() {\n    this.activeModal.dismiss();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ConfirmationDialogComponent } from './confirmation-dialog.component';\n\n@Injectable()\nexport class ConfirmationDialogService {\n\n  constructor(private modalService: NgbModal) { }\n\n  public confirm(\n    title: string,\n    message: string,\n    btnOkText: string = 'OK',\n    btnCancelText: string = 'Cancel',\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<boolean> {\n    const modalRef = this.modalService.open(ConfirmationDialogComponent, { size: dialogSize });\n    modalRef.componentInstance.title = title;\n    modalRef.componentInstance.message = message;\n    modalRef.componentInstance.btnOkText = btnOkText;\n    modalRef.componentInstance.btnCancelText = btnCancelText;\n\n    return modalRef.result;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class JwtService {\n    public refreshToken: string = '';\n\n    constructor() {}\n    getToken(){\n\n        let accesstoken = localStorage.access_token;\n        if(accesstoken){\n            return atob(accesstoken);\n        }else{\n            return false;\n        }\n\n    }\n\n    saveTokens(tokens: any) {       \n           localStorage.setItem('access_token', btoa(tokens.access.token));\n           localStorage.setItem('access_token_expiry', btoa(tokens.access.expires));\n           localStorage.setItem('refresh_token', btoa(tokens.refresh.token));\n           localStorage.setItem('refresh_token_expiry', btoa(tokens.refresh.expires));\n           this.setIsLogin();\n       \n    }\n\n    savePermissions(permissions:any){\n        localStorage.setItem('permissions', JSON.stringify(permissions));\n        return true;\n    }\n    getPermissions(){\n        let permissions = JSON.parse(localStorage.getItem('permissions') || '');\n        if(permissions){\n            return permissions;\n        }\n    }\n\n    setUserPermissions(permissions:any){\n        localStorage.setItem('userPermissions', JSON.stringify(permissions));\n        return true;\n    }\n    \n    getUserPermissions(){\n        let permissions = JSON.parse(localStorage.getItem('userPermissions') || '');\n        if(permissions){\n            return permissions;\n        }\n    }\n\n    checkAccess(key){\n        const user = this.getUser();\n        if(user.isSuperAdmin){\n            return true;\n        }\n        const permissions = this.getUserPermissions();\n        const access = permissions.find((obj) => obj.key === key);\n        console.log(key);\n        return access.write;\n    }\n\n\n    saveUser(user: any){\n        localStorage.setItem('user',JSON.stringify(user));\n        return true;\n    }\n\n    getUser(){\n        let user = JSON.parse(localStorage.getItem('user'));\n        if(user){\n            return user;\n        }\n    }\n    \n    setIsLogin() {\n        localStorage.setItem('isLoggedin', 'true');\n    }\n    \n    async destroyToken() {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('access_token_expiry');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('refresh_token_expiry');\n        localStorage.removeItem('user');\n        localStorage.removeItem('userPermissions');\n        return true;\n    }\n\n    logoutUser() {\n        this.destroyToken();\n        localStorage.removeItem('isLoggedin');\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    APP_SECRET_KEY: \"123456789123456789\",\n    // @TODO: for development only\n    backendUrl:'http://localhost:3000/api/v1',\n    socket_url:'http://localhost:3000',\n    // backendUrl:'http://192.236.178.57:3000/api/v1',\n    // socket_url:'http://192.236.178.57:3000',\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n"],"names":["Injectable","AuthService","JwtService","HttpTokenInterceptor","constructor","jwtService","authService","setUser","authHeader","getToken","intercept","req","next","handle","clone","clonedReq","headers","set","accesstoken","localStorage","access_token","atob","saveTokens","tokens","setItem","btoa","access","token","expires","refresh","setIsLogin","savePermissions","permissions","JSON","stringify","getPermissions","parse","getItem","setUserPermissions","getUserPermissions","checkAccess","key","user","getUser","isSuperAdmin","find","obj","console","log","write","saveUser","destroyToken","removeItem","logoutUser","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}