{"version":3,"file":"src_app_layout_practice-group_practice-group_module_ts.js","mappings":"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","sources":["./src/app/layout/practice-group/components/add-edit-practice-group/add-edit-practice-group.component.ts","./src/app/layout/practice-group/components/practice-group/practice-group.component.ts","./src/app/layout/practice-group/practice-group-routing.module.ts","./src/app/layout/practice-group/practice-group.module.ts","./src/app/layout/practice-group/service/practice-group.service.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { routerTransition } from '@app/router.animations';\nimport { PracticeGroupService } from '../../service/practice-group.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AreaOfLawService } from '@app/layout/area-of-law/service/area-of-law.service';\n\n@Component({\n  selector: 'app-add-edit-practice-group',\n  templateUrl: './add-edit-practice-group.component.html',\n  styleUrls: ['./add-edit-practice-group.component.scss'],\n  animations: [routerTransition()]\n})\nexport class AddEditPracticeGroupComponent implements OnInit {\n  addEditForm: FormGroup;\n  editForm: boolean = false;\n  tempId: any;\n  isLoading: boolean = false;\n  areaOfLaws: any = [];\n  @Output() newItemEvent = new EventEmitter()\n  constructor(\n    public router: Router,\n    private fb: FormBuilder,\n    public route: ActivatedRoute,\n    public areaOfLawService: AreaOfLawService,\n    public practiceGroupService: PracticeGroupService,\n    private toastr: ToastrService\n  ) {\n    this.route.params.subscribe(params => {\n      if (params.tempId !== '' && params.tempId != null) {\n        this.tempId = params.tempId;\n        this.editForm = true;\n        this.getPracticeGroup(this.tempId);\n      } else {\n        this.isLoading = true;\n        this.getAreaOfLaw()\n      }\n    });\n\n\n    this.addEditForm = fb.group({\n      name: ['', [Validators.required]],\n      areaOfLawId: [[], [Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  getAreaOfLaw() {\n    this.areaOfLawService.getAreaOfLaws({\n      page: 1,\n      limit: 10,\n      totalPages: 1,\n      totalResults: 0,\n      searchTerm: '',\n      sortColumn: 'createdAt',\n      sortDirection: 'asc',\n    }).subscribe(response => {\n      this.areaOfLaws = response['results'];\n      this.isLoading = false;\n  },(error)=>{\n      this.isLoading = false;\n  });\n  }\n  getPracticeGroup(tempId: string) {\n    this.isLoading = true;\n    this.practiceGroupService.getPracticeGroupById(tempId).subscribe(response => {\n      this.addEditForm.patchValue({...response, areaOfLawId: response?.areaOfLawId?.map((areaOfLaw)=> areaOfLaw?.id || areaOfLaw) || []});\n      this.getAreaOfLaw()\n    }, (error) => {\n      this.isLoading = false;\n      this.router.navigate(['/data-mangement/practice-groups']);\n    });\n  }\n\n  onSubmit() {\n    this.practiceGroupService.addPracticeGroups(this.addEditForm.value).subscribe(response => {\n      if (response) {\n        this.addEditForm.reset();\n        //this.toastr.success(response.title + ' added!', 'Success');\n        this.newItemEvent.emit()\n        //this.router.navigate(['/data-mangement/practice-groups']);\n      }\n    });\n  }\n\n  cancelEvent() {\n    this.addEditForm.reset();\n    this.newItemEvent.emit()\n  }\n  onUpdate() {\n    this.practiceGroupService.updatePracticeGroup(this.tempId, this.addEditForm.value).subscribe(response => {\n      if (response) {\n        this.addEditForm.reset();\n        // this.toastr.success(response.title + ' Updated!', 'Success');\n        this.router.navigate(['/data-mangement/practice-groups']);\n      }\n    });\n  }\n\n  public onReady(editor) {\n    editor.ui\n      .getEditableElement()\n      .parentElement.insertBefore(\n        editor.ui.view.toolbar.element,\n        editor.ui.getEditableElement()\n      );\n  }\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SortDirection, NgbdSortableHeader, SortEvent } from '@app/shared/directives';\nimport { routerTransition } from '@app/router.animations';\nimport { ConfirmationDialogService } from '@app/shared/services/confirmation-dialog/confirmation-dialog.service';\nimport { debounceTime, distinctUntilChanged, Subject } from 'rxjs';\nimport { PracticeGroupService } from '../../service/practice-group.service';\nimport { JwtService } from '@app/shared/services';\ninterface State {\n  page: number;\n  limit: number;\n  totalPages: number;\n  totalResults: number;\n  searchTerm: string;\n  sortColumn: string;\n  sortDirection: SortDirection;\n}\n@Component({\n  selector: 'app-practice-group',\n  templateUrl: './practice-group.component.html',\n  styleUrls: ['./practice-group.component.scss'],\n  animations: [routerTransition()]\n})\nexport class PracticeGroupComponent implements OnInit {\n  public searchTerm: string = '';\n  searchTermUpdate = new Subject<string>();\n  practiceGroups: any = [];\n  sortedColumn!: string;\n  sortedDirection!: string;\n  isPracticeGroups: boolean = true;\n  isLoading: boolean = false;\n\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\n  @ViewChild('content') content: ElementRef;\n  public _state: State = {\n    page: 1,\n    limit: 10,\n    totalPages: 1,\n    totalResults: 0,\n    searchTerm: '',\n    sortColumn: 'createdAt',\n    sortDirection: 'asc',\n  };\n  isEditAccess: boolean= false;\n  constructor(\n    public router: Router,\n    public practiceGroupService: PracticeGroupService,\n    private cdr: ChangeDetectorRef,\n    public jwtService: JwtService,\n    private confirmationDialogService: ConfirmationDialogService\n  ) {\n    this.searchTermUpdate\n            .pipe(debounceTime(200), distinctUntilChanged())\n            .subscribe(value => {\n                this._state.searchTerm = value;\n                this.getPracticeGroups(this._state);\n            });\n  }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.isEditAccess = this.jwtService.checkAccess('data-mangement');\n    this.getPracticeGroups(this._state);\n  }\n  reload() {\n    window.scrollTo(0, 400);\n    this.getPracticeGroups(this._state);\n  }\n\n  getPracticeGroups(state: State) {\n    this.isLoading = true;\n    this.practiceGroupService.getPracticeGroups(state).subscribe(response => {\n        this.practiceGroups = response['results'];\n        this.setState(response);\n        if (this.practiceGroups.length == 0) {\n            this.isPracticeGroups = false;\n        }else {\n            this.isPracticeGroups = true;\n        }\n        this.isLoading = false;\n    },(error)=>{\n        this.isLoading = false;\n    });\n}\n\neditPracticeGroup(id: string) {\n    this.router.navigate(['/data-mangement/practice-groups/edit-practice-group/' + id]);\n}\n\ndeletePracticeGroup(id: string) {\n\n    this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to delete this practice group ?')\n        .then((confirmed) => {\n            if (confirmed) {\n                this.practiceGroupService.deletePracticeGroup(id).subscribe(response => {\n                    this.getPracticeGroups(this._state);\n                })\n            }\n        }\n        );\n}\n\n\nonSort({ column, direction }: SortEvent) {\n    alert(column);\n    this.sortedColumn = column;\n    this.sortedDirection = direction;\n    this._state.sortColumn = column;\n    this._state.sortDirection = direction;\n    this.getPracticeGroups(this._state);\n}\n\nrefresh() {\n    this.getPracticeGroups(this._state);\n}\n\nsetState(response: any) {\n    this._state.page = response.page;\n    this._state.limit = response.limit;\n    this._state.totalPages = response.totalPages;\n    this._state.totalResults = response.totalResults;\n}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddEditPracticeGroupComponent } from './components/add-edit-practice-group/add-edit-practice-group.component';\nimport { PracticeGroupComponent } from './components/practice-group/practice-group.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: PracticeGroupComponent\n  },\n  {\n    path:'add-practice-group',\n    component: AddEditPracticeGroupComponent\n  },\n  {\n    path:'edit-practice-group/:tempId',\n    component: AddEditPracticeGroupComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PracticeGroupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { AsyncPipe, CommonModule, DecimalPipe, NgFor, NgIf } from '@angular/common';\n\nimport { PracticeGroupRoutingModule } from './practice-group-routing.module';\nimport { PracticeGroupComponent } from './components/practice-group/practice-group.component';\nimport { AddEditPracticeGroupComponent } from './components/add-edit-practice-group/add-edit-practice-group.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { PageHeaderModule } from '@app/shared';\nimport { NgbTypeaheadModule, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PracticeGroupService } from './service/practice-group.service';\nimport { NgbdSortableHeader } from '../../shared/directives';\nimport { AreaOfLawService } from '../area-of-law/service/area-of-law.service';\n\n\n@NgModule({\n  declarations: [\n    PracticeGroupComponent,\n    AddEditPracticeGroupComponent\n  ],\n  imports: [\n    CommonModule,\n    PracticeGroupRoutingModule,\n    ReactiveFormsModule, \n    PageHeaderModule,\n    NgFor,\n\t\tDecimalPipe,\n\t\tFormsModule,\n\t\tAsyncPipe,\n\t\tNgbTypeaheadModule,\n\t\tNgbPaginationModule,\n\t\tNgIf\n  ],\n  providers: [NgbdSortableHeader, PracticeGroupService, AreaOfLawService]\n})\nexport class PracticeGroupModule { }\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '@app/shared/services/api/api.service';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PracticeGroupService {\n    constructor(private apiService: ApiService) {}\n\n    getPracticeGroups(data: any): Observable<any> {\n\n        if(data.searchTerm == ''){\n            return this.apiService.get(`/practice-group?sortBy=${data.sortColumn+':'+data.sortDirection}&limit=${data.limit}&page=${data.page}`);\n            \n        }else{\n            return this.apiService.get(`/practice-group?sortBy=${data.sortColumn+':'+data.sortDirection}&limit=${data.limit}&page=${data.page}&search=${data.searchTerm}`);\n        }  \n        \n    }\n    \n    addPracticeGroups(data: any): Observable<any> {\n        \n        return this.apiService.post(`/practice-group`, data);\n    }\n\n    getPracticeGroupById(data: any): Observable<any> {\n        \n        return this.apiService.get(`/practice-group/${data}`);\n    }\n    \n    deletePracticeGroup(data: any): Observable<any> {\n        \n        return this.apiService.delete(`/practice-group/${data}`);\n    }\n    \n    updatePracticeGroup(practiceGroupId: any, data: any): Observable<any> {\n        \n        return this.apiService.patch(`/practice-group/${practiceGroupId}`, data);\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}