{"version":3,"file":"src_app_layout_dashboard_components_redirect_redirect_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AACE;AAEzD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAiB;KAC/B;CACJ,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;;AAArB,qBAAqB;IAJjC,uDAAQ,CAAC;QACN,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KAC1B,CAAC;GACW,qBAAqB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACfgB;AACO;AACW;AACV;AACR;IAQrC,iBAAiB,SAAjB,iBAAiB;IAE1B,YACW,WAAwB,EACxB,UAAsB,EACtB,MAAc,EACb,KAAqB;QAHtB,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,UAAK,GAAL,KAAK,CAAgB;IAE/B,CAAC;IAEH,QAAQ;QACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAG,IAAI,CAAC,QAAQ,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAClE,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,IAAI,YAAY,CAAC;gBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SACxC;IACL,CAAC;;;;;;;;AApBQ,iBAAiB;IAN7B,wDAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,0EAAwC;QAExC,UAAU,EAAE,CAAC,wEAAgB,EAAE,CAAC;;KACnC,CAAC;GACW,iBAAiB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACZW;AAC2C;AAClB;AACmB;AACtC;AACN;AACgB;AACW;AACF;IAuBrD,cAAc,SAAd,cAAc;;AAAd,cAAc;IApB1B,uDAAQ,CAAC;QACR,YAAY,EAAE;YACZ,kEAAiB;SAClB;QACD,OAAO,EAAE;YACP,yDAAY;YACZ,+DAAmB;YACnB,yDAAgB;YAChB,2EAAqB;YACrB,kDAAK;YACP,wDAAW;YACX,uDAAW;YACX,sDAAS;YACT,0EAAkB;YAClB,2EAAmB;YACnB,iDAAI;YACF,2DAAqB,EAAE;SACxB;QACD,SAAS,EAAE,CAAC,8EAAW,CAAC;KACzB,CAAC;GACW,cAAc;AAAA;;;;;;;;;;;;;;;;;;;AC/BuB;AACH;AAExC,MAAM,QAAQ,GAAG,CAAC,2DAAW,EAAE,wDAAU,CAAC,CAAC;AAEd;AACF","sources":["./src/app/layout/dashboard/components/redirect/redirect-routing.module.ts","./src/app/layout/dashboard/components/redirect/redirect.component.ts","./src/app/layout/dashboard/components/redirect/redirect.module.ts","./src/app/shared/services/index.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RedirectComponent } from './redirect.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RedirectComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class RedirectRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RoleService } from '@app/layout/role/service/role.service';\nimport { routerTransition } from '@app/router.animations';\nimport { JwtService } from '@app/shared/services';\n\n@Component({\n    selector: 'app-redirect',\n    templateUrl: './redirect.component.html',\n    styleUrls: ['./redirect.component.scss'],\n    animations: [routerTransition()]\n})\nexport class RedirectComponent implements OnInit {\n    userData:any;\n    constructor(\n        public roleService: RoleService,\n        public jwtService: JwtService,\n        public router: Router,\n        private route: ActivatedRoute\n      ) {\n      }\n\n    ngOnInit() {\n        this.userData = this.jwtService.getUser();\n        if(this.userData) {\n            this.roleService.getRoleById(this.userData.role).subscribe(response => {\n                const returnUrl = response.link || '/dashboard';\n                this.router.navigate([returnUrl]);\n            });\n        } else {\n            this.router.navigate(['auth/login']);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { AsyncPipe, CommonModule, DecimalPipe, NgFor, NgIf } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbTypeaheadModule, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PageHeaderModule } from '@app/shared';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { RedirectComponent } from './redirect.component';\nimport { RoleService } from '@app/layout/role/service/role.service';\nimport { RedirectRoutingModule } from './redirect-routing.module';\n\n\n@NgModule({\n  declarations: [\n    RedirectComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule, \n    PageHeaderModule,\n    RedirectRoutingModule,\n    NgFor,\n\t\tDecimalPipe,\n\t\tFormsModule,\n\t\tAsyncPipe,\n\t\tNgbTypeaheadModule,\n\t\tNgbPaginationModule,\n\t\tNgIf,\n    NgxMaskModule.forRoot(),\n  ],\n  providers: [RoleService]\n})\nexport class RedirectModule { }\n\n","import { AuthService } from './auth/auth.service';\nimport { JwtService } from './jwt/jwt.service';\n\nexport const services = [AuthService, JwtService];\n\nexport * from './auth/auth.service';\nexport * from './jwt/jwt.service';\n\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}