{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/layout/dashboard/service/search.service.ts","./src/app/layout/role/service/role.service.ts","./src/app/layout/timecard/service/timecard.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ApiService } from '@app/shared/services/api/api.service';\nimport { environment } from 'environments/environment';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  public url: string = environment.backendUrl;\n  constructor(private http: HttpClient, private apiService: ApiService) { }\n  getRecords(data: any, actionparam: any, filterData: any): Observable<any> {\n    \n    let _filterData = filterData\n    if (filterData.responsibleAttorney) {\n      _filterData.responsibleAttorney = filterData.responsibleAttorney.id\n    }\n    const queryParams = this.queryString(actionparam, 'array');\n    let queryString = queryParams.length > 0 ? `&${queryParams.join(\"&\")}` : ''\n    if (data.searchTerm == '') {\n      return this.apiService.post(`/search/filter?sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}${queryString}`, _filterData);\n    } else {\n      return this.apiService.post(`/search/filter?sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}&search=${data.searchTerm}${queryString}`, _filterData);\n    }\n  }\n  getSearchForExcelDownload(data: any, actionparam: any, filterData): Observable<any> {\n    const queryParams = this.queryString(actionparam, 'array');\n    let queryString = queryParams.length > 0 ? `&${queryParams.join(\"&\")}` : ''\n    let _filterData = filterData\n    if (filterData.responsibleAttorney) {\n      _filterData.responsibleAttorney = filterData.responsibleAttorney.id\n    }\n    if (data.searchTerm == '') {\n      return this.apiService.postBlob(`/search/download-excel?sortBy=${data.sortColumn + ':' + data.sortDirection}${queryString}`, _filterData);\n    } else {\n      return this.apiService.postBlob(`/search/download-excel?sortBy=${data.sortColumn + ':' + data.sortDirection}&search=${data.searchTerm}${queryString}`, _filterData);\n    }\n  }\n  filtersSearchDataOption(data: any, actionparam: any): Observable<any> {\n    const queryString = this.queryString(actionparam)\n    let filterData = data\n    if (filterData.responsibleAttorney) {\n      filterData.responsibleAttorney = filterData.responsibleAttorney.id\n    }\n    return this.apiService.post(`/search/filter/options${queryString}`, filterData)\n  }\n  filtersSearchData(actionparam: any): Observable<any> {\n    const queryString = this.queryString(actionparam)\n    return this.apiService.post(`/search/filter/options${queryString}`)\n  }\n\n  filterMatterSearchData(actionparam: any): Observable<any> {\n    const queryString = this.queryString(actionparam)\n    return this.apiService.post(`/search/filter/options${queryString}`)\n  }\n  queryString(actionparam: any, returnType: any = 'string'):string|any {\n    const { billingMode, payorType, expire, adjustment, staffId, staffIdOperation, staffIdDuration } = actionparam\n    let queryArray = []\n    if (billingMode) {\n      queryArray.push(`billingMode=${decodeURI(billingMode)}`)\n    }\n    if (expire) {\n      queryArray.push(`expire=${decodeURI(expire)}`)\n    }\n    if (payorType) {\n      queryArray.push(`payorType=${decodeURI(payorType)}`)\n    }\n    if (adjustment) {\n      queryArray.push(`adjustment=${decodeURI(adjustment)}`)\n    }\n    if (staffId) {\n      queryArray.push(`staffId=${decodeURI(staffId)}`)\n      queryArray.push(`staffIdOperation=${decodeURI(staffIdOperation)}`)\n      queryArray.push(`staffIdDuration=${decodeURI(staffIdDuration)}`)\n    }\n    let queryString = \"\"\n    if (queryArray.length > 0) {\n      queryString = `?${queryArray.join(\"&\")}`\n    }\n    return returnType === 'string' ? queryString : queryArray\n  }\n  getDashboardRecords(): Observable<any> {\n    return this.apiService.get(`/search/dashboard-records`);\n  }\n  getDayExpireChart(): Observable<any> {\n    return this.apiService.get(`/search/get-day-expire-chart`)\n  }\n  getAggregationBilling(): Observable<any> {\n    return this.apiService.get(`/search/get-aggregation-billing`)\n  }\n  getAggregationFilter(time): Observable<any> {\n    return this.apiService.post(`/search/get-aggregation-filter-operation`, {\n      time: time\n    })\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ApiService } from '@app/shared/services/api/api.service';\nimport { environment } from 'environments/environment';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n  public url: string = environment.backendUrl;\n  public activityState = new ReplaySubject<boolean>();\n  constructor(private http: HttpClient, private apiService: ApiService) { }\n\n\n  getRoles(data: any): Observable<any> {\n    if (data.searchTerm == '') {\n      return this.apiService.get(`/roles?sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}`);\n\n    } else {\n\n      return this.apiService.get(`/roles?sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}&search=${data.searchTerm}`);\n    }\n  }\n\n  getAllRoles(): Observable<any> {\n    return this.apiService.get(`/roles?sortBy=createdAt:desc&limit=10&page=1`);\n  }\n\n  getWebModules(): Observable<any> {\n    return this.apiService.get(`/staffs/get/web/module/all`);\n  }\n  \n  getRoleById(data: any): Observable<any> {\n    return this.apiService.get(`/roles/${data}`);\n  }\n\n  addNewRole(data: any): Observable<any> {\n    return this.apiService.post(`/roles`, data);\n\n  }\n\n  updateRole(roleId: any, data: any): Observable<any> {\n    return this.apiService.patch(`/roles/${roleId}`, data);\n  }\n\n  deleteRole(data: String): Observable<any> {\n    return this.apiService.delete(`/roles/` + data);\n\n  }\n\n  /**\n  * Getter method for getting Logged In status\n  */\n   getActivityState() {\n    return this.activityState.asObservable();\n  }\n\n  /**\n  * Setter method to set Logged In status\n  * @param value\n  */\n  setActivityState(value) {\n    this.activityState.next(value);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ApiService } from '@app/shared/services/api/api.service';\nimport { environment } from 'environments/environment';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeCardService {\n  public url: string = environment.backendUrl;\n  constructor(private http: HttpClient, private apiService: ApiService) { }\n\n  getTimeCards(data: any): Observable<any> {\n    if (data.searchTerm == '') {\n      return this.apiService.get(`/timecards?sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}`);\n    } else {\n      return this.apiService.get(`/timecards?sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}&search=${data.searchTerm}`);\n    }\n  }\n  getTimeCardsByMatter(matterId: any): Observable<any> {\n      return this.apiService.get(`/timecards?matter=${matterId}`);\n  }\n  getTimeCardForExcelDownload(data: any): Observable<any> {\n    if (data.searchTerm == '') {\n      return this.apiService.getBlob(`/timecards/download?sortBy=${data.sortColumn + ':' + data.sortDirection}`);\n    } else {\n      return this.apiService.getBlob(`/timecards/download?sortBy=${data.sortColumn + ':' + data.sortDirection}&search=${data.searchTerm}`);\n    }\n  }\n  getDeletedTimeCards(data: any): Observable<any> {\n    if (data.searchTerm == '') {\n      return this.apiService.get(`/timecards?isDelete=true&sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}`);\n    } else {\n      return this.apiService.get(`/timecards?isDelete=true&sortBy=${data.sortColumn + ':' + data.sortDirection}&limit=${data.limit}&page=${data.page}&search=${data.searchTerm}`);\n    }\n  }\n\n  getTimeCardCSV(): Observable<any> {\n    return this.apiService.get(`/timecards/bulk/csv/data`);\n  }\n\n  getTimeCardById(data: any): Observable<any> {\n    return this.apiService.get(`/timecards/${data}`);\n  }\n\n  addNewTimeCard(data: any): Observable<any> {\n    return this.apiService.post(`/timecards`, data);\n\n  }\n\n  updateTimeCard(clientId: any, data: any): Observable<any> {\n    return this.apiService.patch(`/timecards/${clientId}`, data);\n  }\n\n  deleteTimeCard(data: String): Observable<any> {\n    return this.apiService.delete(`/timecards/` + data);\n\n  }\n\n  getTimecardClientLevelRate(clientId: any): Observable<any> {\n    return this.apiService.get(`/timecards/level-set?client=${clientId}`);\n  }\n\n  getTimecardMatterLevelRate(matterNumber: any): Observable<any> {\n    return this.apiService.get(`/timecards/level-set?matterNumber=${matterNumber}`);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}